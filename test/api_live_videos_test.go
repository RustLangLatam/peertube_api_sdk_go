/*
PeerTube

Testing LiveVideosAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package peertube_api_sdk

import (
	"context"
	openapiclient "github.com/RustLangLatam/peertube_api_sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_peertube_api_sdk_LiveVideosAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test LiveVideosAPIService AddLive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.LiveVideosAPI.AddLive(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test LiveVideosAPIService ApiV1VideosIdLiveSessionGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id openapiclient.ApiV1VideosOwnershipIdAcceptPostIdParameter

		resp, httpRes, err := apiClient.LiveVideosAPI.ApiV1VideosIdLiveSessionGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test LiveVideosAPIService ApiV1VideosLiveIdSessionsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id openapiclient.ApiV1VideosOwnershipIdAcceptPostIdParameter

		resp, httpRes, err := apiClient.LiveVideosAPI.ApiV1VideosLiveIdSessionsGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test LiveVideosAPIService GetLiveId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id openapiclient.ApiV1VideosOwnershipIdAcceptPostIdParameter

		resp, httpRes, err := apiClient.LiveVideosAPI.GetLiveId(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test LiveVideosAPIService UpdateLiveId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id openapiclient.ApiV1VideosOwnershipIdAcceptPostIdParameter

		httpRes, err := apiClient.LiveVideosAPI.UpdateLiveId(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
